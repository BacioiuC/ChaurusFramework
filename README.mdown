ChaurusFramework:
================================

I initially started working on this framework in order to mimic Love2D's way of handling drawing and updating of images and sprites. Now that I got accostumed to MOAI I decided to change the goal for Chaurus. I'm using it as a base framework in order to prototype games during jams (ludumdare, f*ck this jam, BlazeJam?, etc). 

<dl>
<dt>A quick overview:</dt>
<dd>In order to load and display a new image:</dd>
</dl>

<pre>
myImage_Texture = image:newTexture("path/to/texture.png",Layer,"STRING IDENTIFIER")
myImage = image:newImage(MyImageTexture, posX, posY)
</pre>

image:newTexture returns the id of the image file. That ID is then used to create a new prop (sprite) when called by image:newImage. In order to update an image position during the Main Loop, just call image:updateImage(myImage, posX, posY).

<dl>
<dt>Image functions:</dt>
<dd>
</dd>
</dl>
* image:setVisible(myImage, bool)
* image:setScale(myImage, scaleOnX, scaleOnY) `-- 1 is the default scale`
* image:removeProp(myImage) `-- removes the image from the layer`
* image:returnImageId("STRING IDENTIFIER") `-- returns the ID of the Texture based on the String Identifier used when first creating it `
* image:textureGetSize(myImage) `-- returns the Width and Height of the Texture.`


<dl>
<dt>Code logic:</dt>
<dd>
The lua file I use to write my game logic is: `game.lua`. The function that represents the `mainLoop` is Game:update(), which get's called in a MOAICouroutine in `main.lua`. Game:init() is the entry point into out game and the function that is first executed. Use it to load any assets you require (simillar to love.load(), for those with a Love2D background).
</dd>

<dt>Other functions of interest:</dt>
<dd>
MOAI's input's are routed through the following functions:
</dd>
</dl>

* Game:keypressed(key)  
* Game:keyreleased(key)
* Game:touchPressed( ) -- works for both mouse and touch points
* Game:touchReleased( ) -- works for both mouse and touch points
* Game.touchLocation( x, y ) -- updates two sets of variables: Game.mouseX and Game.mouseY: contains the position of the cursor, or the position at which a touch event occured after they get filtered by MOAI's wndToWorld function. Game.msX, Game.msY do the same thing, but without being filtered.

<dl>
<dt>Additional libraries:</dt>
<dd>The following libraries are included with Chaurus: </dd>
</dl>
* Yonaba's awesome Lua Pathfinding library: [Jumper] [1]
* Derickd's awesome Layermanager from MOAI-GUI: [Layermgr.lua] [2]
* My old animation library from Love2D [ found in extended/animation.lua] <-- needs re-write for chaurus.

[1]: https://github.com/Yonaba/Jumper        "Yonaba's Jumper - Pathfinding Library"
[2]: https://github.com/derickd/moaigui/blob/master/layermgr.lua        "DerickD's Layer Manager"